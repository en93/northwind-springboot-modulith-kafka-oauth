openapi: 3.0.1
info:
  title: Northwind Modulith API
  description: Northwind Modulith API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
    description: Local Server

tags:
  - name: Product
    description: Performs CRUD operations for products
  - name: Order
    description: Performs CRUD operations for orders
  - name: Supplier
    description: Performs CRUD operations for suppliers
  - name: Customer
    description: Performs CRUD operations for customers

paths:
  /products:
    get:
      summary: Returns a list of products
      description: Returns a list of products
      operationId: getProducts
      tags:
        - Product
      parameters:
        - name: productKey
          in: query
          description: Key for the product
          required: false
          schema:
            type: string
        - name: searchProduct
          in: query
          description: Filter products by their titles or partial match
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/ProductSortField'
        - $ref: '#/components/parameters/SortDirection'

      responses:
        '200':
          description: List of matching product results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  pagination:
                    $ref: '#/components/schemas/PaginationData'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /orders:
    get:
      summary: Returns a list of orders
      description: Returns a list of orders
      operationId: getOrders
      tags:
        - Order
      parameters:
        - name: orderKey
          in: query
          description: Key for the order
          required: false
          schema:
            type: string
        - name: customerKey
          in: query
          description: Filter orders by order
          required: false
          schema:
            type: string
        - name: searchOrder
          in: query
          description: Search for an order via its details
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/OrderSortField'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: List of matching order results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  pagination:
                    $ref: '#/components/schemas/PaginationData'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /suppliers:
    get:
      summary: Returns a list of suppliers
      description: Returns a list of suppliers
      operationId: getSuppliers
      tags:
        - Supplier
      parameters:
        - name: supplierKey
          in: query
          description: Key for the supplier
          required: false
          schema:
            type: string
        - name: searchSupplier
          in: query
          description: Search for a supplier by name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/SupplierSortField'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: List of matching supplier results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'
                  pagination:
                    $ref: '#/components/schemas/PaginationData'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'


  /customer:
    get:
      summary: Returns a list of customers
      description: Returns a list of customers
      operationId: getCustomers
      tags:
        - Customer
      parameters:
        - name: customerKey
          in: query
          description: Key for the customer
          required: false
          schema:
            type: string
        - name: searchCustomer
          in: query
          description: Search for a customer by name
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/CustomerSortField'
        - $ref: '#/components/parameters/SortDirection'
      responses:
        '200':
          description: List of matching customer results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  pagination:
                    $ref: '#/components/schemas/PaginationData'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'

components:
  parameters:
    Limit:
      name: limit
      in: query
      description: Maximum items per page
      required: false
      schema:
        type: integer
        default: 10
        example: 10
        minimum: 1
        maximum: 100
    Offset:
      name: offset
      in: query
      description: Count of results to skip
      required: false
      schema:
        type: integer
        example: 0
        default: 0
        minimum: 0
    SortDirection:
      name: sortDirection
      in: query
      description: Direction of results
      required: false
      schema:
        $ref: '#/components/schemas/SortDirectionEnum'
    CustomerSortField:
      name: customerSortField
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CustomerSortEnum'
    OrderSortField:
      name: orderSortField
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/OrderSortEnum'
    ProductSortField:
      name: productSortField
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ProductSortEnum'
    SupplierSortField:
      name: supplierSortField
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/SupplierSortEnum'

  schemas:
    Product:
      type: object
      properties:
        productKey:
          type: string
          example: 'PRD-001'
        name:
          type: string
          example: 'Blink Notepad'
        description:
          type: string
          example: 'Large notepad'
        supplier:
          $ref: '#/components/schemas/Supplier'
        category:
          $ref: '#/components/schemas/Category'
        unit:
          type: string
          example: 'Pack of 10'
        price:
          type: number
          format: float
          example: '10'

    Order:
      type: object
      properties:
        orderKey:
          type: string
          example: 'ORDR-b93cb3ba-eb08-466e-ab2c-68b0ba0ac119'
        orderDate:
          type: string
          format: date-time
        shipper:
          $ref: '#/components/schemas/Shipper'
        orderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'

    Shipper:
      type: object
      properties:
        shipperId:
          type: string
          example: 'SHPPR-31b3c990-dd6e-4a8c-8f26-678dc8c4e644'
        shipperName:
          type: string
          example: 'Logistics North'
        shipperPhone:
          type: string
          example: '09123456'

    OrderDetail:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer

    Supplier:
      type: object
      properties:
        supplierKey:
          type: string
          example: 'SUPP-f2ab505c-1a97-4a30-9736-f5fa8a1c2eff'
        supplierName:
          type: string
          example: 'Sporting Supplier store'
        addressDetails:
          $ref: '#/components/schemas/AddressDetails'
        supplierPhone:
          type: string
          example: '0912345678'

    Customer:
      type: object
      properties:
        customerKey:
          type: string
          example: 'CUST-62827ec4-7667-4df2-b0e0-569144bfbaf0'
        customerName:
          type: string
          example: 'My mowing business'
        addressDetails:
          $ref: '#/components/schemas/AddressDetails'

    AddressDetails:
      type: object
      properties:
        address:
          type: string
          example: '1 Queen Street'
        city:
          type: string
          example: 'Auckland'
        postalCode:
          type: string
          example: '1060'
        country:
          type: string
          example: 'New Zealand'

    Category:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        categoryName:
          type: string
        description:
          type: string

    PaginationData:
      type: object
      properties:
        totalElements:
          type: integer
          description: Count of all matching results in dataset
          example: '190'
        size:
          type: integer
          description: Maximum items per page
          example: '10'
        pageCurrent:
          type: integer
          example: '0'
          description: Count of results to skip
        pageCount:
          type: integer
          example: '5'
          description: Total number of pages available.

    CustomerSortEnum:
      type: string
      enum: [ 'key', 'name' ]
      default: 'key'
    OrderSortEnum:
      type: string
      enum: [ 'key', 'orderdate']
      default: 'key'
    ProductSortEnum:
      type: string
      enum: [ 'key', 'name', 'price' ]
      default: 'key'
    SupplierSortEnum:
      type: string
      enum: [ 'key', 'name' ]
      default: 'key'
    SortDirectionEnum:
      type: string
      enum: [ 'asc', 'desc' ]
      default: 'asc'
